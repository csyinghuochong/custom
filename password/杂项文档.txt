D:\unityhub\2021.3.29f1c1\Editor\Data\PlaybackEngines\AndroidPlayer\SDK\platform-tools

shader变种收集
https://github.com/csdjk/LcL-Tools-Unity/tree/main/Editor/ShaderCollection

查看整个系统的内存使用情况：
adb shell dumpsys meminfo

查看特定应用的内存使用情况
adb shell dumpsys meminfo com.guangying.mengjing   
2573854kb  2513mb
Pss Total : 占用了真实的物理内存的空间
private dirty : 指私有驻留内存
Heap Size: 指占用总内存（Heap  堆）
Heap Alloc : 指在虚拟地址中分配了这么多空间
Heap Free: 空闲内存
//Native Heap ：c 中malloc出来的堆空间,扩展:c++申请的内存为native process，java申请的内存：java process
//camera中一般是算法申请的内存，或者自己写的另外一些 jni的方法
//Dalvik Heap：指java中new出来的java堆空间,占用的虚拟内存的空间


adb -s emulator-5554 logcat

https://www.jb51.net/article/274809.htm

abd 连接雷电模拟器

adb -s emulator-5554 logcat > C:\unitlogcatfile.txt
adb logcat 

Win+D  所有窗口最小化。 再按一下全部显示。

图片在内存占用尺寸大小：
例如，我们有一张1024x1024的PNG图片，每像素占用4个字节，我们想要在Android平台上使用ETC2压缩格式，并且生成mipmap。那么我们可以计算出：

- 原始尺寸 = 1024 x 1024 x 4 = 4194304 字节
- 压缩比 = 0.5 （ETC2压缩后每像素占用2个字节）   到底是2 还是 8
- mipmap系数 = 1.333 （假设生成了3级mipmap）
- 平台系数 = 1 （假设没有额外的平台优化）

那么这张图片在Unity中占用的内存大小为：

内存大小 = 4194304 x 0.5 x 1.333 x 1 = 2796206.67 字节 ≈ 2.67 MB
ETC1（ETC原格式）‌：ETC1格式是OpenGL ES图形标准的一部分，被所有的Android设备所支持。它是一种4位压缩格式，每个像素占用0.5字节，适用于1024*1024大小的贴图压缩后的大小为0.5M‌1。
‌ETC2‌：ETC2是ETC1的扩展，支持更高的压缩效率和更广泛的用途。ETC2格式在Unity5.2之后成为默认的压缩格式，支持透明通道，且图片宽高只要是4的倍数即可‌2。
支持透明通道
‌ETC1‌：不支持透明通道，早期对于RGBA 32位的贴图纹理通常会选用其他格式来处理透明度问题‌2。
‌ETC2‌：支持透明通道，这使得ETC2在处理包含透明度的图像时更为灵活和高效‌

1024走astc6x6也还好  其中法线贴图可以适当小点 比如512  很糊就basecolor给个1024，别的砍下问题不大


